<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/styles.css">
  <title>
    <%= country ? 'Editar País' : 'Agregar País' %>
  </title>
</head>

<body>

  <h1>
    <%= country ? 'Editar País' : 'Agregar País' %>
  </h1>

  <form action="/add-country" method="POST" id="countryForm" onsubmit="return validarFormulario(event)">
    <% if (country) { %>
      <input type="hidden" name="_method" value="PUT">
    <% } %>
  
    <div class="form-group">
      <label for="nameCommon">Nombre Común</label>
      <input type="text" 
             id="nameCommon" 
             name="name[common]" 
             value="<%= country ? country.name.common : '' %>"
             required 
             minlength="3" 
             maxlength="90"
             pattern="^[a-zA-ZÀ-ÿ\s]+$"
             onkeyup="validarCampo(this)"
             class="form-control">
      <div class="error-message" id="nameCommon-error"></div>
    </div>
  
    <div class="form-group">
      <label for="nameOfficial">Nombre Oficial</label>
      <input type="text" 
             id="nameOfficial" 
             name="name[official]" 
             value="<%= country ? country.name.official : '' %>"
             required 
             minlength="3" 
             maxlength="90"
             pattern="^[a-zA-ZÀ-ÿ\s]+$"
             onkeyup="validarCampo(this)"
             class="form-control">
      <div class="error-message" id="nameOfficial-error"></div>
    </div>
  
    <div class="form-group">
      <label for="capital">Capital (separadas por coma)</label>
      <input type="text" 
             id="capital" 
             name="capital" 
             value="<%= country ? country.capital.join(', ') : '' %>"
             placeholder="Ej: Ciudad1, Ciudad2"
             required
             onkeyup="validarCampo(this)"
             class="form-control">
      <div class="error-message" id="capital-error"></div>
    </div>
  
    <div class="form-group">
      <label for="area">Área (km²)</label>
      <input type="number" 
             id="area" 
             name="area" 
             value="<%= country ? country.area : '' %>"
             required
             min="1"
             step="0.01"
             onkeyup="validarCampo(this)"
             class="form-control">
      <div class="error-message" id="area-error"></div>
    </div>
  
    <div class="form-group">
      <label for="region">Región</label>
      <input type="text" 
             id="region" 
             name="region" 
             value="<%= country ? country.region : '' %>"
             required
             minlength="3" 
             maxlength="100"
             pattern="^[a-zA-ZÀ-ÿ\s]+$"
             onkeyup="validarCampo(this)"
             class="form-control">
      <div class="error-message" id="region-error"></div>
    </div>
  
    <div class="form-group">
      <label for="population">Población</label>
      <input type="number" 
             id="population" 
             name="population" 
             value="<%= country ? country.population : '' %>"
             required
             min="1"
             step="1"
             onkeyup="validarCampo(this)"
             class="form-control">
      <div class="error-message" id="population-error"></div>
    </div>
  
    <div class="form-group">
      <label for="languages">Idiomas (separados por coma)</label>
      <input type="text" 
             id="languages" 
             name="languages" 
             value="<%= country ? country.languages.join(', ') : '' %>"
             placeholder="Ej: Español, Inglés"
             required
             onkeyup="validarCampo(this)"
             class="form-control">
      <div class="error-message" id="languages-error"></div>
    </div>
    <!-- Nuevos campos -->

    <div class="form-group">
      <label for="borders">Fronteras (separadas por coma)</label>
      <input type="text" 
             id="borders" 
             name="borders" 
             value="<%= country ? country.borders.join(', ') : '' %>"
             placeholder="Ej: ABC, DEF"
             required
             onkeyup="validarCampo(this)"
             class="form-control">
      <div class="error-message" id="borders-error"></div>
    </div>

    <div class="form-group">
      <label for="gini">Índice de Gini</label>
      <input type="number" 
             id="gini" 
             name="gini" 
             value="<%= country ? country.gini : '' %>"
             required
             min="0"
             max="100"
             step="0.01"
             onkeyup="validarCampo(this)"
             class="form-control">
      <div class="error-message" id="gini-error"></div>
    </div>

    <div class="form-group">
      <label for="timezones">Zona Horaria</label>
      <input type="text" 
             id="timezones" 
             name="timezones" 
             value="<%= country ? country.timezones : '' %>"
             required  
             placeholder="Ejemplo: UTC-05:00"
             onkeyup="validarCampo(this)"  
             class="form-control">
      <div class="error-message" id="timezones-error"></div>   <!-- Donde se mostrará el error -->
    </div>
    

  
    <div class="form-group">
      <label for="creator">Creador</label>
      <input type="text" 
             id="creator" 
             name="creator" 
             value="<%= country ? country.creator : '' %>"
             required
             minlength="3"
             maxlength="100"
             pattern="^[a-zA-ZÀ-ÿ\s]+$"
             onkeyup="validarCampo(this)"
             class="form-control">
      <div class="error-message" id="creator-error"></div>
    </div>
  
    <button type="submit" class="btn btn-primary" id="submitBtn">
      <%= country ? 'Actualizar' : 'Agregar' %> País
    </button>

    <!-- Mensaje de éxito que se muestra después de agregar el país -->
    <div id="successMessage" style="display: none; color: green;">¡País agregado con éxito!</div>
  </form>
  

  <button onclick="window.location.href='/api/countries';">
    Lista de Países
  </button>

  <script src="/js/form.js"></script>
</body>

</html>

<style>
  .form-group {
    margin-bottom: 1rem;
  }
  
  .form-control {
    display: block;
    width: 100%;
    padding: 0.375rem 0.75rem;
    font-size: 1rem;
    line-height: 1.5;
    border: 1px solid #ced4da;
    border-radius: 0.25rem;
  }
  
  .form-control.is-invalid {
    border-color: #dc3545;
    padding-right: calc(1.5em + 0.75rem);
    background-repeat: no-repeat;
    background-position: right calc(0.375em + 0.1875rem) center;
    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
  }
  
  .error-message {
    display: none;
    color: #dc3545;
    font-size: 0.875em;
    margin-top: 0.25rem;
  }
  
  .error-message.active {
    display: block;
  }
  
  
  .btn {
    display: inline-block;
    font-weight: 400;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    padding: 0.375rem 0.75rem;
    font-size: 1rem;
    line-height: 1.5;
    border-radius: 0.25rem;
  }
  
  .btn-primary {
    color: #fff;
    background-color: #0d6efd;
    border-color: #0d6efd;
  }
  </style>
  

  <script>
    // Función para validar un campo individual
    function validarCampo(input) {
      const errorDiv = document.getElementById(`${input.id}-error`);
      let esValido = true;
      let mensajeError = '';
  
      // Limpiar estados previos
      input.classList.remove('is-invalid');
      errorDiv.classList.remove('active');
  
      const valor = input.value.trim();
  
      // Validación para campos requeridos
      if (input.required && !valor) {
        esValido = false;
        mensajeError = 'Este campo es obligatorio';
      } else {
        switch (input.id) {
          case 'nameCommon':
          case 'nameOfficial':
            if (valor.length < 3 || valor.length > 90) {
              esValido = false;
              mensajeError = 'Debe tener entre 3 y 90 caracteres';
            } else if (!/^[a-zA-ZÀ-ÿ\s]+$/.test(valor)) {
              esValido = false;
              mensajeError = 'Solo se permiten letras y espacios';
            }
            break;
  
          case 'capital':
            const capitales = valor.split(',').map(c => c.trim());
            if (!capitales.every(c => c.length >= 3 && c.length <= 90 && /^[a-zA-ZÀ-ÿ\s]+$/.test(c))) {
              esValido = false;
              mensajeError = 'Cada capital debe tener entre 3 y 90 caracteres y solo contener letras y espacios';
            }
            break;
  
          case 'area':
            const area = parseFloat(valor);
            if (isNaN(area) || area < 1) {
              esValido = false;
              mensajeError = 'Debe ser un número mayor que 0';
            }
            break;
  
          case 'region':
            if (valor.length < 3 || valor.length > 100) {
              esValido = false;
              mensajeError = 'Debe tener entre 3 y 100 caracteres';
            } else if (!/^[a-zA-ZÀ-ÿ\s]+$/.test(valor)) {
              esValido = false;
              mensajeError = 'Solo se permiten letras y espacios';
            }
            break;
  
          case 'population':
            const population = parseInt(valor);
            if (isNaN(population) || population < 1) {
              esValido = false;
              mensajeError = 'Debe ser un número entero mayor que 0';
            }
            break;
  
          case 'languages':
            const idiomas = valor.split(',').map(i => i.trim());
            if (!idiomas.every(i => i.length >= 3 && i.length <= 60 && /^[a-zA-ZÀ-ÿ\s]+$/.test(i))) {
              esValido = false;
              mensajeError = 'Cada idioma debe tener entre 3 y 60 caracteres y solo contener letras y espacios';
            }
            break;
  
          case 'gini':
            const gini = parseFloat(valor);
            if (isNaN(gini) || gini < 0 || gini > 100) {
              esValido = false;
              mensajeError = 'Debe ser un número entre 0 y 100';
            }
            break;
  
          case 'timezones':
            const timezoneRegex = /^UTC[+-][0-9]{2}:[0-9]{2}$/;
            if (!timezoneRegex.test(valor)) {
              esValido = false;
              mensajeError = 'Debe estar en el formato UTC±HH:MM. Ejemplo: UTC-05:00.';
            }
            break;
  
          case 'borders':
            const borders = valor.split(',').map(b => b.trim());
            if (!borders.every(b => b.length >= 3 && /^[a-zA-ZÀ-ÿ\s]+$/.test(b))) {
              esValido = false;
              mensajeError = 'Cada frontera debe tener entre 3 y 90 caracteres y solo contener letras y espacios';
            }
            break;
  
          case 'creator':
            if (valor.length < 3 || valor.length > 100) {
              esValido = false;
              mensajeError = 'Debe tener entre 3 y 100 caracteres';
            } else if (!/^[a-zA-ZÀ-ÿ\s]+$/.test(valor)) {
              esValido = false;
              mensajeError = 'Solo se permiten letras y espacios';
            }
            break;
        }
      }
  
      // Si el campo no es válido, mostrar error
      if (!esValido) {
        input.classList.add('is-invalid');
        errorDiv.textContent = mensajeError;
        errorDiv.classList.add('active');
      }
  
      return esValido;
    }
  
    // Función para validar todo el formulario
    function validarFormulario(event) {
      event.preventDefault();  // Prevenir el envío del formulario para manejarlo manualmente
  
      const form = event.target;
      const inputs = form.querySelectorAll('input[required]');
      let formValido = true;
  
      // Validar todos los campos
      inputs.forEach(input => {
        if (!validarCampo(input)) {
          formValido = false;
        }
      });
  
      if (formValido) {
        // Deshabilitar el botón para evitar clics múltiples
        const submitBtn = document.getElementById('submitBtn');
        submitBtn.disabled = true;
        submitBtn.textContent = 'Agregando...'; // Cambiar el texto del botón a "Agregando..."
  
        // Simulando el proceso de agregar país
        setTimeout(() => {
          // Mostrar mensaje de éxito
          document.getElementById('successMessage').style.display = 'block';
          
          // Limpiar el formulario (opcional)
          form.reset();
  
          // Habilitar nuevamente el botón después de un tiempo
          submitBtn.disabled = false;
          submitBtn.textContent = '<%= country ? "Actualizar" : "Agregar" %> País';  // Volver a su texto original
        }, 1500); // Simula un retardo de 1.5 segundos (puedes ajustarlo según sea necesario)
      }
    }
  
    // Agregar validación en tiempo real
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('countryForm');
      const inputs = form.querySelectorAll('input');
  
      inputs.forEach(input => {
        input.addEventListener('input', () => validarCampo(input));
        input.addEventListener('blur', () => validarCampo(input));
      });
  
      form.addEventListener('submit', validarFormulario);
    });
  </script>
  